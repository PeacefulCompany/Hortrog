# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on a single platform

on:
  push:
    branches: ["master", "develop"]
  pull_request:
    branches: ["master", "develop"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update && sudo apt-get install doxygen

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: >
          cmake --preset other
          -S ${{ github.workspace }}
      - name: Build using CMake
        run: cmake --build ${{ github.workspace }}/build

      - name: Run CTest
        run: ctest --test-dir ${{ github.workspace }}/build

  #  - name: Test
  # working-directory: ${{ steps.strings.outputs.build-output-dir }}
  # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
  # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
  #  run: ctest --build-config ${{ matrix.build_type }}
